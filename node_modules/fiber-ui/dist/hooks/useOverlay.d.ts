/// <reference types="react" />
import { MergeElementProps } from '../utils';
export declare type OverlayProps = MergeElementProps<'div', {
    trigger?: 'hover' | 'click';
    visible?: boolean;
    placement?: 'bottomLeft' | 'bottom' | 'bottomRight' | 'topLeft' | 'top' | 'topRight' | 'rightTop' | 'right' | 'rightBottom' | 'leftTop' | 'left' | 'leftBottom';
    onVisibleChange?: (flag: boolean) => void;
    children?: React.ReactNode | React.ReactNode[];
    expand?: boolean;
    inline?: boolean;
    style?: React.CSSProperties & object;
}>;
export declare const useOverlay: ({ trigger, visible: visibleProps, placement, onVisibleChange, expand, inline }: OverlayProps) => {
    wrapperRef: import("react").RefObject<HTMLDivElement & {
        contains: (e: EventTarget) => Boolean;
    }>;
    childrenRef: import("react").RefObject<HTMLSpanElement>;
    dropdownRef: import("react").RefObject<HTMLDivElement>;
    visible: boolean;
    setVisible: (newValue: boolean) => void;
    hoverProps: {};
    clickProps: {};
};
