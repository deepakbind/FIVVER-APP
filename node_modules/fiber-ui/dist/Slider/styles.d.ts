/// <reference types="react" />
export declare const StyledSlider: import("styled-components").StyledComponent<"div", any, import("../utils").MergeElementProps<"div", {
    defaultValue?: number | undefined;
    value?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onChange?: ((value: number) => void) | undefined;
    hover?: boolean | undefined;
    focus?: boolean | undefined;
    disabled?: boolean | undefined;
    vertical?: boolean | undefined;
    marks?: object | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    size?: "sm" | "md" | "lg" | undefined;
}>, never>;
export declare const VerticalContainer: import("styled-components").StyledComponent<"div", any, import("../utils").MergeElementProps<"div", {
    defaultValue?: number | undefined;
    value?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onChange?: ((value: number) => void) | undefined;
    hover?: boolean | undefined;
    focus?: boolean | undefined;
    disabled?: boolean | undefined;
    vertical?: boolean | undefined;
    marks?: object | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    size?: "sm" | "md" | "lg" | undefined;
}>, never>;
export declare const MarksContainer: import("styled-components").StyledComponent<"div", any, import("../utils").MergeElementProps<"div", {
    defaultValue?: number | undefined;
    value?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onChange?: ((value: number) => void) | undefined;
    hover?: boolean | undefined;
    focus?: boolean | undefined;
    disabled?: boolean | undefined;
    vertical?: boolean | undefined;
    marks?: object | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    size?: "sm" | "md" | "lg" | undefined;
}>, never>;
export declare const Rail: import("styled-components").StyledComponent<"div", any, import("../utils").MergeElementProps<"div", {
    defaultValue?: number | undefined;
    value?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onChange?: ((value: number) => void) | undefined;
    hover?: boolean | undefined;
    focus?: boolean | undefined;
    disabled?: boolean | undefined;
    vertical?: boolean | undefined;
    marks?: object | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    size?: "sm" | "md" | "lg" | undefined;
}>, never>;
export declare const Track: import("styled-components").StyledComponent<"div", any, import("../utils").MergeElementProps<"div", {
    defaultValue?: number | undefined;
    value?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onChange?: ((value: number) => void) | undefined;
    hover?: boolean | undefined;
    focus?: boolean | undefined;
    disabled?: boolean | undefined;
    vertical?: boolean | undefined;
    marks?: object | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    size?: "sm" | "md" | "lg" | undefined;
}>, never>;
export declare const Thumb: import("styled-components").StyledComponent<"div", any, import("../utils").MergeElementProps<"div", {
    defaultValue?: number | undefined;
    value?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onChange?: ((value: number) => void) | undefined;
    hover?: boolean | undefined;
    focus?: boolean | undefined;
    disabled?: boolean | undefined;
    vertical?: boolean | undefined;
    marks?: object | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    size?: "sm" | "md" | "lg" | undefined;
}>, never>;
export declare const Mark: import("styled-components").StyledComponent<"span", any, import("../utils").MergeElementProps<"div", {
    defaultValue?: number | undefined;
    value?: number | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onChange?: ((value: number) => void) | undefined;
    hover?: boolean | undefined;
    focus?: boolean | undefined;
    disabled?: boolean | undefined;
    vertical?: boolean | undefined;
    marks?: object | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    size?: "sm" | "md" | "lg" | undefined;
}>, never>;
