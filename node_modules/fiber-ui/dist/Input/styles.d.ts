/// <reference types="react" />
export declare const BaseInput: import("styled-components").StyledComponent<"input", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
export declare const SmallInput: import("styled-components").StyledComponent<"input", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
export declare const MediumInput: import("styled-components").StyledComponent<"input", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
export declare const LargeInput: import("styled-components").StyledComponent<"input", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
export declare const Addon: import("styled-components").StyledComponent<"span", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
export declare const TableSpan: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const BlockSpan: import("styled-components").StyledComponent<"span", any, {}, never>;
export declare const InputSpan: import("styled-components").StyledComponent<"span", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
export declare const TagInputSpan: import("styled-components").StyledComponent<"span", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
export declare const TagInput: import("styled-components").StyledComponent<"input", any, import("../utils").MergeElementProps<"input", {
    size?: "sm" | "md" | "lg" | undefined;
    onPressEnter?: ((event: import("react").KeyboardEvent<HTMLInputElement>) => void) | undefined;
    addonBefore?: import("react").ReactNode;
    addonAfter?: import("react").ReactNode;
    prefix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    suffix?: string | number | boolean | {} | import("react").ReactElement<any, string | ((props: any) => import("react").ReactElement<any, string | any | (new (props: any) => import("react").Component<any, any, any>)> | null) | (new (props: any) => import("react").Component<any, any, any>)> | import("react").ReactNodeArray | import("react").ReactPortal | import("react").ReactNode[] | null | undefined;
    fix?: boolean | undefined;
    bordered?: boolean | undefined;
    disabled?: boolean | undefined;
    button?: boolean | undefined;
    dropdown?: boolean | undefined;
    value?: string | undefined;
    defaultValue?: string | undefined;
    style?: (import("react").CSSProperties & object) | undefined;
    camouflage?: boolean | undefined;
}>, never>;
