import { MergeElementProps } from '../utils';
import { PaginationProps } from '../Pagination';
import React, { FC } from 'react';
declare type column = {
    title: string;
    dataIndex: string;
    render?: (text: any, record: object) => React.ReactNode;
    onClick?: (value: any) => void;
    ellipsis?: boolean;
};
export declare type TableProps = MergeElementProps<'table', {
    columns: column[];
    dataSource: {
        [key: string]: any;
    }[];
    rowSelection?: {
        type?: 'checkbox' | 'radio';
        getCheckboxProps?: (record: object) => {
            disabled?: boolean;
        };
        onChange?: (selectedRowKeys: string[], selectedRows: object[]) => void;
        selectedRowKeys?: string[];
    };
    pagination?: PaginationProps;
    fixed?: boolean;
    hoverType?: 'row' | 'cell';
    onRowClick?: (record: {
        [key: string]: any;
    }) => void;
    style?: React.CSSProperties & object;
    rowStyle?: React.CSSProperties & object;
}>;
export declare type RowProps = {
    selected?: boolean;
    hover?: boolean;
};
export declare type CellProps = {
    selected?: boolean;
    clickable?: boolean;
    ellipsis?: boolean;
};
declare const Table: FC<TableProps>;
export { Table };
